{
  "import": {
    "prefix": "impt-",
    "body": "const $1 = @import(\"$2\");",
    "description": "import library"
  },
  "import std": {
    "prefix": "impt-std",
    "body": "const std = @import(\"std\");",
    "description": "import standard library"
  },
  "const": {
    "prefix": "cnt-",
    "body": "const ${1:name} = ${2:value};",
    "description": "const declaration"
  },
  "var": {
    "prefix": "var-",
    "body": "var ${1:name}: ${2:type} = ${3:value};",
    "description": "mutable variable declaration"
  },
  "main function": {
    "prefix": "init",
    "body": "const std = @import(\"std\");\n\npub fn main() !void {\n\t$1\n}",
    "description": "const declaration"
  },
  "stdin": {
    "prefix": "std-in",
    "body": "const stdin = std.io.getStdIn().reader();\nvar buffer: [100]u8 = undefined;\n\nstd.debug.print(\"input : \", .{});\nconst input = try stdin.readUntilDelimiterOrEof(&buffer, '\\n');\n",
    "description": "std input"
  },
  "catch": {
    "prefix": "catch-",
    "body": "${1:expr} catch |err| ${2:handle_err}",
    "description": "catch error and handle"
  }
} 
